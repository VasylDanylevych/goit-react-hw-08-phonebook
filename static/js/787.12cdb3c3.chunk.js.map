{"version":3,"file":"static/js/787.12cdb3c3.chunk.js","mappings":"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","sources":["redux/contacts/selector.js","components/ContactForm/ContactForm.jsx","redux/filter/selector.js","components/Filter/Filter.jsx","components/ContactList/ContactList.style.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\n// import { Form, Input } from './ContactForm.style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/thunk';\nimport { selectContacts } from 'redux/contacts/selector';\nimport { Box, FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = { name, number };\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      setName('');\n      setNumber('');\n      return;\n    }\n    dispatch(addContactThunk(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" gap={4}>\n      <FormControl onSubmit={handleSubmit}>\n        <FormLabel fontSize=\"20px\" fontWeight=\"600\">\n          Name:\n        </FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl>\n        <FormLabel fontSize=\"20px\" fontWeight=\"600\">\n          Number:\n        </FormLabel>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n        />\n      </FormControl>\n      <Button type=\"submit\" colorScheme=\"blue\" size=\"lg\">\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n","export const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\nimport { filterContact } from 'redux/filter/filterCounterSlice';\nimport { selectFilter } from 'redux/filter/selector';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChangeFilter = evt => {\n    const value = evt.target.value;\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <FormControl>\n      <FormLabel fontSize=\"20px\" fontWeight=\"600\">\n        Find contacts by name\n      </FormLabel>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        required\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </FormControl>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  padding-left: 15px;\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  gap: 10px;\n\n  & li {\n    font-weight: 600;\n    font-size: 18px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  & button {\n    background-color: tomato;\n    border-radius: 4px;\n    border: none;\n    cursor: pointer;\n    width: 70px;\n    height: 25px;\n    font-size: 15px;\n  }\n\n  & button:active {\n    background-color: #9999ff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { List } from './ContactList.style';\nimport { useEffect } from 'react';\nimport { selectFilter } from 'redux/filter/selector';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selector';\nimport { deleteContactThunk, fetchContactsThunk } from 'redux/contacts/thunk';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const getFilteredContacts = (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContact = getFilteredContacts(items, filter);\n\n  return (\n    <>\n      {isLoading && (\n        <div>\n          <span>Loading...</span>\n        </div>\n      )}\n      <List>\n        {filteredContact.map(({ id, name, number }) => {\n          return (\n            <li key={id}>\n              {name}: {number}{' '}\n              <button onClick={() => dispatch(deleteContactThunk(id))}>\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import React from 'react';\nimport { Box, Heading } from '@chakra-ui/react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <Box maxWidth=\"500px\" margin=\"0 auto\">\n      <Heading as=\"h1\" size=\"xl\" marginY=\"2rem\">\n        Phonebook\n      </Heading>\n      <ContactForm />\n      <Heading as=\"h2\" size=\"lg\" marginY=\"2rem\">\n        Contacts\n      </Heading>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","display","flexDirection","gap","onSubmit","evt","preventDefault","newContact","find","contact","alert","addContactThunk","fontSize","fontWeight","I","type","pattern","title","required","value","onChange","e","target","colorScheme","size","selectFilter","filter","Filter","filterContact","List","styled","ContactList","useEffect","fetchContactsThunk","filteredContact","normalizedFilter","toLowerCase","item","includes","getFilteredContacts","map","id","onClick","deleteContactThunk","maxWidth","margin","as","marginY"],"sourceRoot":""}